#!/usr/bin/env python
# -*- coding: utf-8 -*-
import scapy.all as scapy
from json import load

def scan(ip):
    arp_request = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_request_broadcast = broadcast/arp_request
    answered = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]
    clients = []
    for answer in answered:
        client = {
        "IP": answer[1].psrc,
        "Mac": answer[1].hwsrc
        }
        clients.append(client)
    return clients

def represent_scan(clients):
    print("_" * 41)
    print("IP\t\t\tMac Address")
    print("=" * 41)
    for client in clients:
        print(client["IP"] + "\t\t" + client["Mac"])

def get_args():
    import optparse
    parser = optparse.OptionParser()
    parser.add_option("-r", "--range", dest='IP', help="Specify IP or IP range")
    (options, arguments) = parser.parse_args()
    if not options.IP:
        parser.error("Specify IP or an IP range")
    else:
        return options


with open("macs.json", "r", encoding="utf-8") as file:
    macPrefixUI = load(file)

# options = get_args()
# clients = scan(options.IP)
IP = "192.168.1.1/24"
clients = scan(IP)
represent_scan(clients)